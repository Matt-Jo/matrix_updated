ServerName cablesandkits.com

Protocols h2 h2c http/1.1
<IfModule http2_module>
	LogLevel http2:info
</IfModule>

<VirtualHost *:80>
    ServerName cablesandkits.com
    ServerAlias container.cablesandkits.com
    <IfModule mod_rewrite.c>
            RewriteEngine On
            RewriteCond %{HTTP_HOST} ^(.+).cablesandkits.com$
            RewriteRule ^(.*)$ https://%1.cablesandkits.com$1 [R=301,L]
    </IfModule>
    DocumentRoot /usr/local/apache2/htdocs
</VirtualHost>

<VirtualHost *:443>
	ServerName cablesandkits.com
    ServerAlias container.cablesandkits.com
	ProxyPassMatch ^/(.*\.php(/.*)?)$ fcgi://${PHP_IP}:9000/usr/local/apache2/htdocs/$1
    DocumentRoot /usr/local/apache2/htdocs
    DirectoryIndex index.php

    <Directory "/usr/local/apache2/htdocs">
        Options FollowSymLinks
        AllowOverride All
        Require all granted
    </Directory>
	# access control

    <Directory ~ ".+/(\.git|ebay|feeds|library|logs|picture_library)">
        Require all denied
    </Directory>


    <Directory ~ ".+/(\.git|config|ebay|feeds|guides|images|library|picture_library|yui|includes|templates)">
        #php_flag engine off
        <Files ~ "\.php">
            Require all denied
        </Files>
        </Directory>

        <Directory ~ ".+/admin/(backups|cim_temp|feeds_files|import_scripts|includes|offsite-repository|sql_scripts|sqlite)">
            Require all denied
        </Directory>
        <Directory ~ ".+/admin/(charts|css|data_management|images|offsite-repository|reports|resources|sql_scripts|sqlite)">
            #php_flag engine off
            <Files ~ "\.php">
                Require all denied
            </Files>
        </Directory>

        <Directory ~ ".+/(admin/)?(includes|templates)">
            <Files *.js>
                Require all granted
            </Files>
            <Files *.css>
                Require all granted
            </Files>
            #<Files *.mustache.html>
            #        Require all granted
            #</Files>
            <Files *.jpg>
                Require all granted
            </Files>
            <Files *.png>
                Require all granted
            </Files>
            <Files *.gif>
                Require all granted
            </Files>
        </Directory>
				
		<Files *.html>
            Require all granted
        </Files>

        #### End Permissions Changes

        <IfModule mod_headers.c>
            Header set X-UA-Compatible "IE=Edge,chrome=1"
            # mod_headers can't match by content-type, but we don't want to send this header on *everything*...
            <FilesMatch "\.(appcache|crx|css|eot|gif|htc|ico|jpe?g|js|m4a|m4v|manifest|mp4|oex|oga|ogg|ogv|otf|pdf|png|safariextz|svg|svgz|ttf|vcf|webm|webp|woff|xml|xpi)$">
                Header unset X-UA-Compatible
            </FilesMatch>
        </IfModule>

        <IfModule mod_setenvif.c>
            <IfModule mod_headers.c>
                # mod_headers, y u no match by Content-Type?!
                <FilesMatch "\.(gif|ico|jpe?g|png|svg|svgz|webp)$">
                    SetEnvIf Origin ":" IS_CORS
                    Header set Access-Control-Allow-Origin "*" env=IS_CORS
                </FilesMatch>
            </IfModule>
        </IfModule>

        <IfModule mod_headers.c>
            <FilesMatch "\.(eot|font.css|otf|ttc|ttf|woff)$">
                Header set Access-Control-Allow-Origin "*"
            </FilesMatch>
        </IfModule>

        AddType application/javascript         js jsonp
        AddType application/json               json
        AddType audio/mp4                      m4a f4a f4b
        AddType audio/ogg                      oga ogg
        AddType video/mp4                      mp4 m4v f4v f4p
        AddType video/ogg                      ogv
        AddType video/webm                     webm
        AddType video/x-flv                    flv
        AddType image/svg+xml              svg svgz
        AddEncoding gzip                       svgz
        AddType application/vnd.ms-fontobject  eot
        AddType application/x-font-ttf         ttf ttc
        AddType application/x-font-woff        woff
        AddType font/opentype                  otf
        AddType application/octet-stream            safariextz
        AddType application/x-chrome-extension      crx
        AddType application/x-opera-extension       oex
        AddType application/x-shockwave-flash       swf
        AddType application/x-web-app-manifest+json webapp
        AddType application/x-xpinstall             xpi
        AddType application/xml                     rss atom xml rdf
        AddType image/webp                          webp
        AddType image/x-icon                        ico
        AddType text/cache-manifest                 appcache manifest
        AddType text/vtt                            vtt
        AddType text/x-component                    htc
        AddType text/x-vcard                        vcf
				
		<IfModule mod_deflate.c>
            # Force deflate for mangled headers developer.yahoo.com/blogs/ydn/posts/2010/12/pushing-beyond-gzipping/
            <IfModule mod_setenvif.c>
                <IfModule mod_headers.c>
                    SetEnvIfNoCase ^(Accept-EncodXng|X-cept-Encoding|X{15}|~{15}|-{15})$ ^((gzip|deflate)\s*,?\s*)+|[X~-]{4,13}$ HAVE_Accept-Encoding
                    RequestHeader append Accept-Encoding "gzip,deflate" env=HAVE_Accept-Encoding
                </IfModule>
            </IfModule>

            <IfModule mod_filter.c>
                AddOutputFilterByType DEFLATE application/atom+xml \
                    application/javascript \
                    application/x-javascript \
                    application/json \
                    application/rss+xml \
                    application/vnd.ms-fontobject \
                    application/x-font-ttf \
                    application/xhtml+xml \
                    application/xml \
                    font/opentype \
                    image/svg+xml \
                    image/x-icon \
                    text/css \
                    text/html \
                    text/plain \
                    text/x-component \
                    text/xml \
                    text/javascript
                </IfModule>
            </IfModule>
				
		    <IfModule mod_expires.c>
                ExpiresActive on
                ExpiresDefault                          "access plus 1 month"
                ExpiresByType text/cache-manifest       "access plus 0 seconds"
                ExpiresByType text/html                 "access plus 0 seconds"
                ExpiresByType application/json          "access plus 0 seconds"
                ExpiresByType application/xml           "access plus 0 seconds"
                ExpiresByType text/xml                  "access plus 0 seconds"
                ExpiresByType application/atom+xml      "access plus 1 hour"
                ExpiresByType application/rss+xml       "access plus 1 hour"
                ExpiresByType image/x-icon              "access plus 1 weeks"
                ExpiresByType audio/ogg                 "access plus 1 month"
                ExpiresByType image/gif                 "access plus 1 weeks"
                ExpiresByType image/jpg                 "access plus 1 weeks"
                ExpiresByType image/jpeg                "access plus 1 weeks"
                ExpiresByType image/png                 "access plus 1 weeks"
                ExpiresByType image/vnd.microsoft.icon  "access plus 1 weeks"
                ExpiresByType image/ico                 "access plus 1 weeks"
                ExpiresByType video/mp4                 "access plus 1 month"
                ExpiresByType video/ogg                 "access plus 1 month"
                ExpiresByType video/webm                "access plus 1 month"
                ExpiresByType text/x-component          "access plus 1 month"
                ExpiresByType application/vnd.ms-fontobject "access plus 1 month"
                ExpiresByType application/x-font-ttf    "access plus 1 month"
                ExpiresByType application/x-font-woff   "access plus 1 month"
                ExpiresByType font/opentype             "access plus 1 month"
                ExpiresByType image/svg+xml             "access plus 1 weeks"
                ExpiresByType application/javascript    "now plus 1 weeks"
                ExpiresByType application/x-javascript  "now plus 1 weeks"
                ExpiresByType text/javascript           "now plus 1 weeks"
                ExpiresByType text/css                  "now plus 1 weeks"
            </IfModule>

            <IfModule mod_headers.c>
                Header unset ETag
            </IfModule>

            FileETag None
		<IfModule mod_rewrite.c>
            RewriteEngine On
            # LogLevel alert rewrite:trace3 alias:debug
        </IfModule>

        <IfModule mod_autoindex.c>
            Options -Indexes
        </IfModule>

        <FilesMatch "(\.(bak|config|dist|fla|inc|ini|log|psd|sh|sql|swp)|~)$">
            Require all denied
        </FilesMatch>

        AddDefaultCharset utf-8
        AddCharset utf-8 .atom .css .js .json .rss .vtt .xml
        
        SSLEngine on
        SSLSessionCacheTimeout 15
        SSLCertificateFile      /usr/local/apache2/conf/server.crt
        SSLCertificateKeyFile   /usr/local/apache2/conf/server.key

        #   SSL Engine Options:
		#   Set various options for the SSL engine.
		#   o FakeBasicAuth:
		#	 Translate the client X.509 into a Basic Authorisation.  This means that
		#	 the standard Auth/DBMAuth methods can be used for access control.  The
		#	 user name is the `one line' version of the client's X.509 certificate.
		#	 Note that no password is obtained from the user. Every entry in the user
		#	 file needs this password: `xxj31ZMTZzkVA'.
		#   o ExportCertData:
		#	 This exports two additional environment variables: SSL_CLIENT_CERT and
		#	 SSL_SERVER_CERT. These contain the PEM-encoded certificates of the
		#	 server (always existing) and the client (only existing when client
		#	 authentication is used). This can be used to import the certificates
		#	 into CGI scripts.
		#   o StdEnvVars:
		#	 This exports the standard SSL/TLS related `SSL_*' environment variables.
		#	 Per default this exportation is switched off for performance reasons,
		#	 because the extraction step is an expensive operation and is usually
		#	 useless for serving static content. So one usually enables the
		#	 exportation for CGI and SSI requests only.
		#   o OptRenegotiate:
		#	 This enables optimized SSL connection renegotiation handling when SSL
		#	 directives are used in per-directory context.
		#SSLOptions +FakeBasicAuth +ExportCertData +StrictRequire
		<FilesMatch "\.(cgi|shtml|phtml|php)$">
				SSLOptions +StdEnvVars
		</FilesMatch>
		<Directory /usr/lib/cgi-bin>
				SSLOptions +StdEnvVars
		</Directory>

		#   SSL Protocol Adjustments:
		#   The safe and default but still SSL/TLS standard compliant shutdown
		#   approach is that mod_ssl sends the close notify alert but doesn't wait for
		#   the close notify alert from client. When you need a different shutdown
		#   approach you can use one of the following variables:
		#   o ssl-unclean-shutdown:
		#	 This forces an unclean shutdown when the connection is closed, i.e. no
		#	 SSL close notify alert is send or allowed to received.  This violates
		#	 the SSL/TLS standard but is needed for some brain-dead browsers. Use
		#	 this when you receive I/O errors because of the standard approach where
		#	 mod_ssl sends the close notify alert.
		#   o ssl-accurate-shutdown:
		#	 This forces an accurate shutdown when the connection is closed, i.e. a
		#	 SSL close notify alert is send and mod_ssl waits for the close notify
		#	 alert of the client. This is 100% SSL/TLS standard compliant, but in
		#	 practice often causes hanging connections with brain-dead browsers. Use
		#	 this only for browsers where you know that their SSL implementation
		#	 works correctly.
		#   Notice: Most problems of broken clients are also related to the HTTP
		#   keep-alive facility, so you usually additionally want to disable
		#   keep-alive for those clients, too. Use variable "nokeepalive" for this.
		#   Similarly, one has to force some clients to use HTTP/1.0 to workaround
		#   their broken HTTP/1.1 implementation. Use variables "downgrade-1.0" and
		#   "force-response-1.0" for this.
		BrowserMatch "MSIE [2-6]" \
				nokeepalive ssl-unclean-shutdown \
				downgrade-1.0 force-response-1.0
		# MSIE 7 and newer should be able to use keepalive
		BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown

</VirtualHost>

